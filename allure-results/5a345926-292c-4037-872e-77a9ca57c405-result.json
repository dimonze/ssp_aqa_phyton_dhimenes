{"name": "test_ui_create_issue[REST ye merry gentlemen.-Creating of an issue using project keys and issue type names using the REST API 2-REST ye merry gentlemen.]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_selenium.TestJira object at 0x04FC6970>\nsummary = 'REST ye merry gentlemen.'\nbody = 'Creating of an issue using project keys and issue type names using the REST API 2'\nres = 'REST ye merry gentlemen.'\n\n    @pytest.mark.parametrize(\"summary,body,res\", [\n        (normal_summary, normal_body, normal_summary),\n        (empty_summary, normal_body, \"summary: You must specify a summary of the issue.\"),\n        (to_long_summary, normal_body, \"summary: Summary must be less than 255 characters.\"),\n    ])\n    def test_ui_create_issue(self, summary, body, res):\n        self.driver.get(global_url_ui + 'secure/CreateIssue!default.jspa?' + global_auth)\n    \n        create_issue_page = CreateIssuePage(self.driver)\n>       create_issue_page.press_nextbtn()\n\ntests\\test_selenium.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\create_issue_page.py:17: in press_nextbtn\n    self.wait.until(EC.visibility_of_element_located(self.NEXT_BTN)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f9bbfb0d14b01aca7f91d1118880bb3c\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x04FDD090>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n            return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "parameters": [{"name": "summary", "value": "'REST ye merry gentlemen.'"}, {"name": "body", "value": "'Creating of an issue using project keys and issue type names using the REST API 2'"}, {"name": "res", "value": "'REST ye merry gentlemen.'"}], "start": 1535632448073, "stop": 1535632459295, "uuid": "ce1d29e5-21f5-4e95-99a2-8e6d0857bc23", "historyId": "97310a5ae4a681052d14932946fc076a", "fullName": "tests.test_selenium.TestJira#test_ui_create_issue[REST ye merry gentlemen.-Creating of an issue using project keys and issue type names using the REST API 2-REST ye merry gentlemen.]", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver_init')"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver_init')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_selenium"}, {"name": "subSuite", "value": "TestJira"}, {"name": "host", "value": "lvl1302006"}, {"name": "thread", "value": "23620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_selenium"}]}