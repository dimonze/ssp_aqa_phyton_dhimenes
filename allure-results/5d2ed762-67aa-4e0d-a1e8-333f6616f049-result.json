{"name": "test_search_issue[project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"AQAPYTHON-6\"-1]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 11 column 1 (char 10)", "trace": "search_jql = 'project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"AQAPYTHON-6\"'\nres = 1\n\n    @pytest.mark.parametrize(\"search_jql,res\", [\n        ('project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"AQAPYTHON-6\"', 1),\n        ('project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"AQAPYTHON-0\"', 0),\n        ('project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"superIDis*\"', 5),\n    ])\n    def test_search_issue(search_jql, res):\n>       assert res == requests.request(\"GET\", global_url + 'search?jql=' + search_jql,\n                                       auth=(global_user, global_pass)).json()['total']\n\ntests\\test_api.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\requests\\models.py:896: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\appdata\\local\\programs\\python\\python37-32\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\n..\\..\\appdata\\local\\programs\\python\\python37-32\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0412A870>\ns = '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<html>\\n\\n<head>\\n    <title>Forbidden (403)</title>\\n    \\n\\n\\n\\n<!--[if IE]><![endif]-->\\n<scri...page-panel-content -->\\n        </div><!-- .aui-page-panel-inner --></div><!-- .aui-page-panel -->\\n</body>\\n</html>\\n'\nidx = 10\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n            a JSON document) and return a 2-tuple of the Python\n            representation and the index in ``s`` where the document ended.\n    \n            This can be used to decode a JSON document from a string that may\n            have extraneous data at the end.\n    \n            \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 11 column 1 (char 10)\n\n..\\..\\appdata\\local\\programs\\python\\python37-32\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "search_jql", "value": "'project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"AQAPYTHON-6\"'"}, {"name": "res", "value": "1"}], "start": 1535632426587, "stop": 1535632426944, "uuid": "e3b569a9-2d9c-4cea-a92a-49e85d7a70b9", "historyId": "e2ae3e6220c88072754dacfa6200d8fa", "fullName": "tests.test_api#test_search_issue[project%20%3D%20AQAPYTHON%20AND%20text%20~%20\"AQAPYTHON-6\"-1]", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "lvl1302006"}, {"name": "thread", "value": "23620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}