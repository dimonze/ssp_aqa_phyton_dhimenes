{"name": "test_create_issue[create_issue_long_text.json-400]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 403\n +  where 403 = <Response [403]>.status_code\n +    where <Response [403]> = <function request at 0x047E3FA8>('POST', ('http://jira.hillel.it:8080/rest/api/2/' + 'issue/'), data=<_io.BufferedReader name='json/create_issue_long_text.json'>, headers={'Authorization': 'Basic RGltYV9IaW1lbmVzOkRpbWFfSGltZW5lcw==', 'Content-Type': 'application/json'})\n +      where <function request at 0x047E3FA8> = requests.request\n +      and   <_io.BufferedReader name='json/create_issue_long_text.json'> = <bound method JsonObj.read_json of <tests.utils.json_objs.JsonObj object at 0x04E5FD30>>()\n +        where <bound method JsonObj.read_json of <tests.utils.json_objs.JsonObj object at 0x04E5FD30>> = <tests.utils.json_objs.JsonObj object at 0x04E5FD30>.read_json\n +          where <tests.utils.json_objs.JsonObj object at 0x04E5FD30> = JsonObj('create_issue_long_text.json')", "trace": "file_name = 'create_issue_long_text.json', res = 400\n\n    @pytest.mark.parametrize(\"file_name,res\", [\n        (\"create_issue.json\", 201),\n        (\"create_issue_long_text.json\", 400),\n        (\"create_issue_missing_field.json\", 400),\n    ])\n    def test_create_issue(file_name, res):\n>       assert res == requests.request(\"POST\", global_url + 'issue/', data=JsonObj(file_name).read_json(),\n                                       headers=global_headers).status_code\nE       AssertionError: assert 400 == 403\nE        +  where 403 = <Response [403]>.status_code\nE        +    where <Response [403]> = <function request at 0x047E3FA8>('POST', ('http://jira.hillel.it:8080/rest/api/2/' + 'issue/'), data=<_io.BufferedReader name='json/create_issue_long_text.json'>, headers={'Authorization': 'Basic RGltYV9IaW1lbmVzOkRpbWFfSGltZW5lcw==', 'Content-Type': 'application/json'})\nE        +      where <function request at 0x047E3FA8> = requests.request\nE        +      and   <_io.BufferedReader name='json/create_issue_long_text.json'> = <bound method JsonObj.read_json of <tests.utils.json_objs.JsonObj object at 0x04E5FD30>>()\nE        +        where <bound method JsonObj.read_json of <tests.utils.json_objs.JsonObj object at 0x04E5FD30>> = <tests.utils.json_objs.JsonObj object at 0x04E5FD30>.read_json\nE        +          where <tests.utils.json_objs.JsonObj object at 0x04E5FD30> = JsonObj('create_issue_long_text.json')\n\ntests\\test_api.py:27: AssertionError"}, "parameters": [{"name": "file_name", "value": "'create_issue_long_text.json'"}, {"name": "res", "value": "400"}], "start": 1535632425991, "stop": 1535632426252, "uuid": "6f438715-776c-4fe3-a40a-ab55d76e2fa6", "historyId": "c5fb8f38882e45682e261232bd00d3ba", "fullName": "tests.test_api#test_create_issue[create_issue_long_text.json-400]", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "lvl1302006"}, {"name": "thread", "value": "23620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}